source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_log
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
anova_qq
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
anova_qq
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
anova_qq
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
anova_residuals_fitted
anova_qq
anova_residuals_fitted
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
anova_residuals_fitted
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
analysis_interaction
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="coral", size=2)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
anova_interaction
analysis_interaction
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
shapiro.test(anova_log.residauls)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
shapiro.test(anova_log.residauls)
analysis_interaction
anova_interaction
anova_log.residauls
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_qq
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
shapiro.test(anova_log.residauls)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
shapiro.test(anova_log.residauls)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
anova_residuals_fitted
shapiro.test(anova_log.residauls)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls = residuals(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0, )
grid.arrange(anova_log.residuals, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- residuals(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0, )
grid.arrange(anova_log.residuals, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0, )
grid.arrange(anova_log.residuals, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0, )
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", "Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0 )+
lab(x="Fitted", y="Residuals", "Residuals vs Fitted")
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", title="Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0 )+
labs(x="Fitted", y="Residuals", title="Residuals vs Fitted")
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", size=1, alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", title="Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4", size=1, alpha=0 )+
labs(x="Fitted", y="Residuals (log(ms))", title="Residuals vs Fitted")
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
setwd("./speed-comparison-master/data/")
analysis <- read.csv("analysis.csv")
#analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "language", values_to = "runtime")
analysis.long <- pivot_longer(analysis, cols=C:R, names_to = "Language", values_to = "Runtime")
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", title="Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4",alpha=0 )+
labs(x="Fitted", y="Residuals (log(ms))", title="Residuals vs Fitted")
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
dfpc <- read.csv('pcSpecs.csv',header = TRUE)
print(xtable(dfpc, type = "latex", comment = FALSE, caption = 'Table of Pcs used and their respective specifications'))
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
setwd("./speed-comparison-master/data/")
middleTRNew.before <-read.csv("middleTRNew/middleTRNewBefore.csv")
middleTRNew.before.long <- pivot_longer(middleTRNew.before, cols=everything(), names_to="language", values_to="runtime")
jitter <- ggplot(middleTRNew.before.long, aes(x=language, y=log(runtime), color=language))+
geom_point(alpha=0.3, position=position_jitter(height=1, width=0.3))+
labs(x="language", y="runtime (log(ms))", title="Jittered Graph of Execution Time", size=8)
qq <- ggplot(middleTRNew.before.long, aes(sample=log(runtime)))+
stat_qq(col="green")+
stat_qq_line(col="blue")+
facet_wrap(~language, scales="free")+
labs(x="quantiles", y="runtime (log(ms))", title="Quantile-Quantile Plots of Execution Time",
size=8)
grid.arrange(jitter, qq, ncol=2, nrow=1)
df <- read.csv('diagram.csv',header = TRUE)
print(xtable(df, type = "latex", comment = FALSE, caption = 'placeholder'))
setwd("./speed-comparison-master/data/")
pilot <- read.csv("pilotData.csv")
ttheme <- ttheme_minimal(base_size=10)
table <- tableGrob(pilot, them=ttheme)
pilot.long <- pivot_longer(pilot, cols=C:R, names_to = "language", values_to = "runtime")
plot <- ggplot(pilot.long, aes(x=language, y=log(runtime), group=Hardware, color=Hardware))+
geom_point()+
geom_line()+
labs(title= "Interaction Graph",
x= "Progamming Language",
y= "Log Runtime")
grid.arrange(plot, table, ncol=1, nrow=2)
#This equation can be referenced as follows: Eq. \ref{eq:eq1}
setwd("./speed-comparison-master/data/")
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", title="Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4",alpha=0 )+
labs(x="Fitted", y="Residuals (log(ms))", title="Residuals vs Fitted")
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
plot(1:5, pch = 19, main = "Some data", xlab = "Distance (cm)", ylab = "Time (hours)")
df <- data.frame(ID = 1:3, code = letters[1:3])
# Creates tables that follow OUP guidelines using xtable
library(xtable)
print(xtable(df, caption = "This is the table caption", label = "tab:tab1"),
comment = FALSE
)
df <- data.frame(ID = 1:3, code = letters[1:3])
# kable can alse be used for creating tables
knitr::kable(df,
caption = "This is the table caption", format = "latex",
booktabs = TRUE, label = "tab2"
)
dfpc <- read.csv('pcSpecs.csv',header = TRUE)
print(xtable(dfpc, type = "latex", comment = FALSE, caption = 'Table of Pcs used and their respective specifications'))
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
setwd("./speed-comparison-master/data/")
middleTRNew.before <-read.csv("middleTRNew/middleTRNewBefore.csv")
middleTRNew.before.long <- pivot_longer(middleTRNew.before, cols=everything(), names_to="language", values_to="runtime")
jitter <- ggplot(middleTRNew.before.long, aes(x=language, y=log(runtime), color=language))+
geom_point(alpha=0.3, position=position_jitter(height=1, width=0.3))+
labs(x="language", y="runtime (log(ms))", title="Jittered Graph of Execution Time", size=8)
qq <- ggplot(middleTRNew.before.long, aes(sample=log(runtime)))+
stat_qq(col="green")+
stat_qq_line(col="blue")+
facet_wrap(~language, scales="free")+
labs(x="quantiles", y="runtime (log(ms))", title="Quantile-Quantile Plots of Execution Time",
size=8)
grid.arrange(jitter, qq, ncol=2, nrow=1)
df <- read.csv('diagram.csv',header = TRUE)
print(xtable(df, type = "latex", comment = FALSE, caption = 'placeholder'))
setwd("./speed-comparison-master/data/")
pilot <- read.csv("pilotData.csv")
ttheme <- ttheme_minimal(base_size=10)
table <- tableGrob(pilot, them=ttheme)
pilot.long <- pivot_longer(pilot, cols=C:R, names_to = "language", values_to = "runtime")
plot <- ggplot(pilot.long, aes(x=language, y=log(runtime), group=Hardware, color=Hardware))+
geom_point()+
geom_line()+
labs(title= "Interaction Graph",
x= "Progamming Language",
y= "Log Runtime")
grid.arrange(plot, table, ncol=1, nrow=2)
#This equation can be referenced as follows: Eq. \ref{eq:eq1}
setwd("./speed-comparison-master/data/")
frame <- data.frame(summary(anova_log)[[1]])
colnames(frame) <- c("Df", "Sum sq", "Mean sq", "F value", "Pr(>F)")
frame$'Pr(>F)' <- ifelse(is.na(frame$'Pr(>F)'), "", '< 0.0001')
frame$'F value' <- as.numeric(frame$'F value')
frame$'F value' <- ifelse(is.na(frame$'F value'), "", round(frame$'F value', digits=4) )
kable(frame, format="pandoc", escape=FALSE, digits=4, align=c("r", "r", "r", "r", "r", "r"))
anova <- aov(Runtime~Language + Hardware, analysis.long)
anova_log <- aov(log(Runtime)~Language + Hardware, analysis.long)
anova_log.residauls <- resid(anova_log)
anova_qq <- ggplot(data.frame(anova_log.residauls), aes(sample=(anova_log.residauls)))+
geom_qq(col="firebrick", size=2.5)+
geom_qq_line(col="deepskyblue4", alpha=0.75)+
labs(x="Quantile", y="Runtime log(ms)", title="Quantile-Quantile")
anova_residuals_fitted <- ggplot(anova_log,aes(x=fitted(anova_log), y=anova_log.residauls))+
geom_point(col="firebrick")+
geom_smooth(col="deepskyblue4",alpha=0 )+
labs(x="Fitted", y="Residuals (log(ms))", title="Residuals vs Fitted")
grid.arrange(anova_qq, anova_residuals_fitted,ncol=1, nrow=2)
plot(1:5, pch = 19, main = "Some data", xlab = "Distance (cm)", ylab = "Time (hours)")
df <- data.frame(ID = 1:3, code = letters[1:3])
# Creates tables that follow OUP guidelines using xtable
library(xtable)
print(xtable(df, caption = "This is the table caption", label = "tab:tab1"),
comment = FALSE
)
df <- data.frame(ID = 1:3, code = letters[1:3])
# kable can alse be used for creating tables
knitr::kable(df,
caption = "This is the table caption", format = "latex",
booktabs = TRUE, label = "tab2"
)
dfpc <- read.csv('pcSpecs.csv',header = TRUE)
print(xtable(dfpc, type = "latex", comment = FALSE, caption = 'Table of Pcs used and their respective specifications'))
View(anova_residuals_fitted)
setwd("./speed-comparison-master/data/")
pilot <- read.csv("pilotData.csv")
pilot.long <- pivot_longer(pilot, cols=C:R, names_to = "language", values_to = "runtime")
plot <- ggplot(pilot.long, aes(x=language, y=log(runtime), group=Hardware, color=Hardware))+
geom_point()+
geom_line()+
labs(title= "Interaction Graph",
x= "Progamming Language",
y= "Runtime (log(ms))")
plot
setwd("./speed-comparison-master/data/")
pilot <- read.csv("pilotData.csv")
pilot.long <- pivot_longer(pilot, cols=C:R, names_to = "language", values_to = "runtime")
plot <- ggplot(pilot.long, aes(x=language, y=log(runtime), group=Hardware, color=Hardware))+
geom_point()+
geom_line()+
labs(title= "Interaction Graph",
x= "Progamming Language",
y= "Runtime (log(ms))")
plot
df <- read.csv('diagram.csv',header = TRUE)
print(xtable(df, type = "pandoc", comment = FALSE, caption = 'placeholder'))
setwd("./speed-comparison-master/data/")
middleTRNew.before <-read.csv("middleTRNew/middleTRNewBefore.csv")
middleTRNew.before.long <- pivot_longer(middleTRNew.before, cols=everything(), names_to="language", values_to="runtime")
jitter <- ggplot(middleTRNew.before.long, aes(x=language, y=log(runtime), color=language))+
geom_point(alpha=0.3, position=position_jitter(height=1, width=0.3))+
labs(x="language", y="runtime (log(ms))", title="Jittered Graph of Execution Time", size=8)
qq <- ggplot(middleTRNew.before.long, aes(sample=log(runtime)))+
stat_qq(col="green")+
stat_qq_line(col="blue")+
facet_wrap(~language, scales="free")+
labs(x="quantiles", y="runtime (log(ms))", title="Quantile-Quantile Plots of Execution Time",
size=8)
grid.arrange(jitter, qq, ncol=2, nrow=1)
setwd("./speed-comparison-master/data/")
middleTRNew.before <-read.csv("middleTRNew/middleTRNewBefore.csv")
middleTRNew.before.long <- pivot_longer(middleTRNew.before, cols=everything(), names_to="language", values_to="runtime")
jitter <- ggplot(middleTRNew.before.long, aes(x=language, y=log(runtime), color=language))+
geom_point(alpha=0.3, position=position_jitter(height=1, width=0.3))+
labs(x="language", y="runtime (log(ms))", title="Jittered Graph of Execution Time", size=8)
qq <- ggplot(middleTRNew.before.long, aes(sample=log(runtime)))+
geom_qq(col="green")+
geom_qq_line(col="blue")+
facet_wrap(~language, scales="free")+
labs(x="quantiles", y="runtime (log(ms))", title="Quantile-Quantile Plots of Execution Time",
size=8)
grid.arrange(jitter, qq, ncol=2, nrow=1)
source("~/Desktop/UCT/Year 2/STA2005S/ED Project/speed-comparison-master/data/data.R", echo=TRUE)
mean(anova_log.residauls)
