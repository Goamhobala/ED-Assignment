knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
data <- read.csv('winData.csv')
ourData <- read.csv('winData.csv')
ourData <- read.csv('winData.csv')
ourData <- read.csv('winData.csv', header = TRUE)
ourData <- read.csv("winData.csv", header = TRUE)
ourData <- read_csv("winData.csv", header = TRUE)
ourData <- read_csv("winData.csv")
ourData <- read_csv("winData.csv")
ourData
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv", header = FALSE)
ourData <- read_csv("winData.csv")
ourData
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv")
ourData$C
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv")
ourData$C
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv")
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read.table("winData.csv")
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read.table("winData.csv",header = TRUE)
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read.table("winData.csv",header = TRUE)
ourData
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv")
ourData
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
ourData <- read_csv("winData.csv")
ourData
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
y<- c(t(as.matrix(ourData)))
y
ourData <- read_csv("winData.csv")
treat <- c("C","C++","Java","Python","Ruby","R")
treat <- factor(treat)
treat
y<- c(t(as.matrix(ourData)))
y
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
X = random.shuffle([c, cpp, java, python, ruby, r])
X = random.shuffle(c, cpp, java, python, ruby, r)
X = sample(c, cpp, java, python, ruby, r)
treatment <- sample(treat)
PC = c("Ishango PC","HP (i5-7200)","LT","ASUS (i7-5500u)","ScilabB","ScilabD","MiddleTRNew","MiddleTROld")
kable(c)
treatment <- sample(treat)
PC = c("Ishango PC","HP (i5-7200)","LT","ASUS (i7-5500u)","ScilabB","ScilabD","MiddleTRNew","MiddleTROld")
xtable(PC,type= 'Latex')
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
df <- read.csv('diagram.csv',header = TRUE)
df
View(df)
df <- read.csv('diagram.csv',header = TRUE)
df
View(ourData)
View(df)
df <- read.csv('diagram.csv',header = TRUE)
df
xtable(df, type = 'Latex')
df <- read.csv('diagram.csv',header = TRUE)
df
xtable(df, type = 'Latex')
df <- read.csv('diagram.csv',header = TRUE)
df
xtable(df, type = 'Latex')
df <- read.csv('diagram.csv',header = TRUE)
df
print(xtable(df, type = 'latex'))
df <- read.csv('diagram.csv',header = TRUE)
xtable(df, type = 'latex')
df <- read.csv('diagram.csv',header = TRUE)
print.xtable(df, type = 'latex')
df <- read.csv('diagram.csv',header = TRUE)
print.xtable(df)
df <- read.csv('diagram.csv',header = TRUE)
print.xtable(df, type = "latex")
df <- read.csv('diagram.csv',header = TRUE)
xtable(df, type = "latex")
df <- read.csv('diagram.csv',header = TRUE)
print(xtable(df, type = "latex"))
install.packages("setspace")
install.packages("tlmgr")
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
tinytex::parse_install("skeleton.log")
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
tinytex::install_tinytex()
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
dfpc <- read.csv('pcSpecs.csv',header = TRUE)
print(xtable(dfpc, type = "latex"))
dfpc <- read.csv('pcSpecs.csv',header = TRUE)
print(xtable(dfpc, type = "latex", comment = FALSE, caption = 'Table of Pcs used and their respective specifications))
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
knitr::include_graphics("diagram.png")
dfdata <- read.csv('ED-Assignment/speed-comparsion-master/data/analysis.csv', header = TRUE)
dfdata <- read.csv('ED-Assignment\speed-comparsion-master\data\analysis.csv', header = TRUE)
dfdata <- read.csv('ED-Assignment/speed-comparsion-master/data/analysis.csv', header = TRUE)
dfdata <- read.csv('analysis.csv', header = TRUE)
print(xtable(dfdata, type = "latex", comment = FALSE, caption = 'Table data used for analysis'))
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
library(constrasts)
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
library(contrasts)
install.packages("contrast")
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
library(contrasts)
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
library(contrast)
install.packages("contrast")
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
library(contrast)
# References
---
nocite: |
# References
---
nocite: @*
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'p', # Places figures on pages separate from text
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env = "figure" # Latex figure environment
)
library(tidyverse)
library(scales)
library(gridExtra)
library(knitr)
library(xtable)
knitr::write_bib(x = c("rmarkdown", "knitr"), file = "mybib.bib")
nocite: '@*
